#============================================================
# component profile
#
# implementation_id:
# type_name:
# description:
# version:
# vendor:
# category:
# activity_type:
# max_instance:
# language:
# lang_type:
#

#============================================================
# execution context options
#
# exec_cxt.periodic.type: [specify periodic type EC]
# exec_cxt.periodic.rate: [Hz]
# exec_cxt.event_driven.type: [specify event driven type EC]
#

#============================================================
# port configurations
#
# port.[port_name].[interface_name].type: [CORBA, Ice, others...]
# port.[port_name].[interface_name].instance_name: [provider only]
# port.[port_name].[interface_name].bind_to:       [consumer only]
#

#============================================================
# data port configurations
#
# port.[port_name].dataport.interface_type: [corba_cdr, raw_tcp, etc..]
# port.[port_name].dataport.dataflow_type: [push, pull]
# port.[port_name].dataport.subscription_type: [flash, new, periodic]
# port.[port_name].dataport.constraint: [constraint_specifier]
# port.[port_name].dataport.fan_out: [number of connection, InPort only]
# port.[port_name].dataport.fan_in: [number of connection, InPort only]

# publisher property
# port.[inport|outport].[port_name].publisher.push_rate: freq.
# port.[inport|outport].[port_name].publisher.push_policy: [all, new, skip, fifo]
# port.[inport|outport].[port_name].publisher.skip_count: [skip count]


# port.[port_name].dataport.[interface_type].[iface_dependent_options]:
#
# CORBA Any type dependent options
# port.[port_name].dataport.corba_any.inport_ref: read only
# port.[port_name].dataport.corba_any.outport_ref: read only
#
# Raw TCP type dependent options
# port.[port_name].dataport.raw_tcp.server_addr:

#
# port.[port_name].constraint: enable
#
# connector buffer configurations.
# port.[inport|outport].[port_name].buffer.length: 8
# port.[inport|outport].[port_name].buffer.write.full_policy: [overwrite, do_nothing, block]
# port.[inport|outport].[port_name].buffer.write.timeout: 1.0
# port.[inport|outport].[port_name].buffer.read.empty_policy: [readback, do_nothing, block]
# port.[inport|outport].[port_name].buffer.read.timeout: 1.0
#------------------------------------------------------------
#
#


#============================================================
# configuration parameters
#
# conf.[configuration_set_name].[parameter_name]:
# conf.constraint.[parameter_name]:
#
#
#

#------------------------------------------------------------
# configuration sets
#
# conf.[configuration_set_name].[parameter_name]:

#------------------------------------------------------------
# constraint condition of configuration parameter 
#
# substitute variable name: "x"
#
# available constraint formats
#
# - No constraint              : (blank)
# - Direct                     : 100 (read only)
# - 100 or over                : x >= 100
# - 100 or less                : x <= 100
# - Over 100                   : x > 100
# - Less 100                   : x < 0
# - 100 or over and 200 or less: 100 <= x <= 200
# - Over 100 and less 200      : 100 < x < 200
# - Enumeration                : (9600, 19200, 115200)
# - Array                      : x < 1, x < 10, x > 100
# - Hash                       : {key0: 100<x<200, key1: x>=100}
#
# conf.constraint.[parameter_name]:
